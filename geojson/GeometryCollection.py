# generated by datamodel-codegen:
#   filename:  GeometryCollection.json
#   timestamp: 2023-06-01T19:31:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional, Union

from pydantic import BaseModel, Field


class Type(Enum):
    geometry_collection = 'GeometryCollection'


class Type4(Enum):
    point = 'Point'


class Geometry(BaseModel):
    type: Type4
    coordinates: List[float] = Field(..., min_items=2)
    bbox: Optional[List[float]] = Field(None, min_items=4)


class Type5(Enum):
    line_string = 'LineString'


class Coordinate(BaseModel):
    __root__: List[Any]


class Geometry1(BaseModel):
    type: Type5
    coordinates: List[Coordinate] = Field(..., min_items=2)
    bbox: Optional[List[float]] = Field(None, min_items=4)


class Type6(Enum):
    polygon = 'Polygon'


class Geometry2(BaseModel):
    type: Type6
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_items=4)


class Type7(Enum):
    multi_point = 'MultiPoint'


class Geometry3(BaseModel):
    type: Type7
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_items=4)


class Type8(Enum):
    multi_line_string = 'MultiLineString'


class Geometry4(BaseModel):
    type: Type8
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_items=4)


class Type9(Enum):
    multi_polygon = 'MultiPolygon'


class Geometry5(BaseModel):
    type: Type9
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_items=4)


class GeojsonGeometrycollection(BaseModel):
    type: Type
    geometries: List[
        Union[Geometry, Geometry1, Geometry2, Geometry3, Geometry4, Geometry5]
    ]
    bbox: Optional[List[float]] = Field(None, min_items=4)
